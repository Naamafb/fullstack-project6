{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\fullstack-project6\\\\src\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  let {\n    userid\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [findPosts, setFindPosts] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n  const [currentComments, setCurrentComments] = useState();\n  const [selectedComments, setSelectedComments] = useState(false);\n  const selectedPost = postId => {\n    setCurrentPost(postId);\n    setSelectedComments(null);\n  };\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userid}`).then(response => response.json()).then(data => setPosts(data)).catch(() => setFindPosts(false));\n  }, []);\n  const displayComments = () => {\n    debugger;\n    if (selectedComments) {\n      setSelectedComments(null);\n    } else {\n      fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currentPost}`).then(response => response.json()).then(data => setCurrentComments(data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this)))).catch(() => setCurrentComments(\"there aren't comments\"));\n      setSelectedComments(currentPost);\n    }\n  };\n  if (findPosts) {\n    let postsHtml = posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: post.id === currentPost ? 'selectedPost' : 'post',\n        onClick: () => selectedPost(post.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          visibility: post.id === currentPost ? 'visible' : 'collapse',\n          display: post.id === currentPost ? 'flex' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: displayComments,\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            visibility: post.id === selectedComments ? 'visible' : 'collapse',\n            display: post.id === selectedComments ? 'flex' : 'none'\n          },\n          children: currentComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"There are no posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Posts, \"15kW5irelRvybvUTHYvJTcs7fs8=\", false, function () {\n  return [useParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Posts","_s","userid","posts","setPosts","findPosts","setFindPosts","currentPost","setCurrentPost","currentComments","setCurrentComments","selectedComments","setSelectedComments","selectedPost","postId","fetch","then","response","json","data","catch","displayComments","map","comment","children","name","fileName","_jsxFileName","lineNumber","columnNumber","body","id","postsHtml","post","className","onClick","title","style","visibility","display","_c","$RefreshReg$"],"sources":["C:/full stack/fullstack-project6/src/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport \"./Posts.css\"\r\n\r\nfunction Posts() {\r\n  let {userid}=useParams();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [findPosts, setFindPosts] = useState(true);\r\n  const [currentPost,setCurrentPost]=useState();\r\n  const [currentComments,setCurrentComments]=useState()\r\n  const [selectedComments,setSelectedComments]=useState(false)\r\n  \r\n   const selectedPost = (postId) => {\r\n    setCurrentPost(postId)\r\n    setSelectedComments(null)\r\n\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data))\r\n      .catch(() => setFindPosts(false));\r\n  },[]);\r\n\r\n  const displayComments=()=>{\r\n    debugger\r\n    if(selectedComments){\r\n        setSelectedComments(null)\r\n    }\r\n    else{\r\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currentPost}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrentComments(\r\n        (data.map((comment)=>\r\n        (<div key={comment.id}>\r\n            <h3>{comment.name}</h3>\r\n            <p>{comment.body}</p>\r\n        </div>))\r\n        )))\r\n      .catch(() => setCurrentComments(\"there aren't comments\"));\r\n      setSelectedComments(currentPost)\r\n    }\r\n};\r\n  \r\n\r\n  if (findPosts) {\r\n    let postsHtml = posts.map((post) =>(\r\n    <div key={post.id}>\r\n     <button className={ post.id === currentPost?'selectedPost':'post'} key={post.id} onClick={() => selectedPost(post.id)}>\r\n     <h3>{post.title}</h3>\r\n     <p>{post.body}</p>\r\n     </button>\r\n\r\n\r\n     <div  style={{ visibility: post.id === currentPost ? 'visible' : 'collapse',display:post.id === currentPost ? 'flex' : 'none' }}>\r\n      <button onClick={displayComments}> \r\n        comments\r\n      </button> \r\n      <div style={{ visibility: post.id === selectedComments ? 'visible' : 'collapse' ,display:post.id === selectedComments ? 'flex' : 'none'}}>\r\n        {currentComments}\r\n      </div>\r\n     </div>\r\n    </div>));\r\n    return (\r\n      <div>\r\n        {postsHtml}\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n  {return (<h2>There are no posts</h2>);}\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}