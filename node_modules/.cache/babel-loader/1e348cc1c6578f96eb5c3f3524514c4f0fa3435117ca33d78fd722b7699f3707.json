{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\react_api\\\\src\\\\Albums.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Albums() {\n  _s();\n  let jsonUser = localStorage.getItem(\"user\");\n  let user = JSON.parse(jsonUser);\n  let userid = user.id;\n  const [albums, setAlbums] = useState([]);\n  const [findAlbums, setFindAlbums] = useState(true);\n  const navigate = useNavigate();\n  // const [findPhotos, setFindPhotos] = useState(true);\n\n  // const [currentAlbum,setCurrentAlbum]=useState();\n  //   const [currentPhotos,setCurrentPhotos]=useState();\n  //   const [selectedComments,setSelectedComments]=useState(false);\n\n  const selectedAlbum = albumId => {\n    // setCurrentAlbum(albumId);\n    navigate(`/user/albums/${albumId}/photos`);\n  };\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userid}`).then(response => response.json()).then(data => setAlbums(data)).catch(() => setFindAlbums(false));\n  }, [userid]);\n  if (findAlbums) {\n    let albumsHtml = albums.map(album => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/albums/${album.id}/photos`,\n      children: [\" \", album.title]\n    }, album.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: albumsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"There are no posts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Albums, \"Je7pEz9yayEi3drUv6/h3aSRvGQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Albums","_s","jsonUser","localStorage","getItem","user","JSON","parse","userid","id","albums","setAlbums","findAlbums","setFindAlbums","navigate","selectedAlbum","albumId","fetch","then","response","json","data","catch","albumsHtml","map","album","to","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/full stack/react_api/src/Albums.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Albums() {\r\n  let jsonUser = localStorage.getItem(\"user\");\r\n  let user = JSON.parse(jsonUser);\r\n  let userid = user.id;\r\n\r\n  const [albums, setAlbums] = useState([]);\r\n  const [findAlbums, setFindAlbums] = useState(true);\r\n  const navigate=useNavigate(); \r\n  // const [findPhotos, setFindPhotos] = useState(true);\r\n\r\n  // const [currentAlbum,setCurrentAlbum]=useState();\r\n//   const [currentPhotos,setCurrentPhotos]=useState();\r\n//   const [selectedComments,setSelectedComments]=useState(false);\r\n\r\n  const selectedAlbum = (albumId) => {\r\n    // setCurrentAlbum(albumId);\r\n    navigate(`/user/albums/${albumId}/photos`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setAlbums(data))\r\n      .catch(() => setFindAlbums(false));\r\n  },[userid]);\r\n\r\n  if (findAlbums) {\r\n    let albumsHtml = albums.map((album) => (<Link key={album.id} to={`/user/albums/${album.id}/photos`}> {album.title}</Link>));\r\n    return (\r\n      <div>\r\n        {albumsHtml}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no posts</h2>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;EAC/B,IAAIM,MAAM,GAAGH,IAAI,CAACI,EAAE;EAEpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMoB,QAAQ,GAACjB,WAAW,CAAC,CAAC;EAC5B;;EAEA;EACF;EACA;;EAEE,MAAMkB,aAAa,GAAIC,OAAO,IAAK;IACjC;IACAF,QAAQ,CAAE,gBAAeE,OAAQ,SAAQ,CAAC;EAC5C,CAAC;EAGDrB,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAE,sDAAqDT,MAAO,EAAC,CAAC,CAClEU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,SAAS,CAACU,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAC,MAAMT,aAAa,CAAC,KAAK,CAAC,CAAC;EACtC,CAAC,EAAC,CAACL,MAAM,CAAC,CAAC;EAEX,IAAII,UAAU,EAAE;IACd,IAAIW,UAAU,GAAGb,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAAM1B,OAAA,CAACH,IAAI;MAAgB8B,EAAE,EAAG,gBAAeD,KAAK,CAAChB,EAAG,SAAS;MAAAkB,QAAA,GAAC,GAAC,EAACF,KAAK,CAACG,KAAK;IAAA,GAA9DH,KAAK,CAAChB,EAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6D,CAAE,CAAC;IAC3H,oBACEjC,OAAA;MAAA4B,QAAA,EACGJ;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEV;EAEA,oBACEjC,OAAA;IAAA4B,QAAA,EAAI;EAAkB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE/B;AAAC/B,EAAA,CAvCQD,MAAM;EAAA,QAOEH,WAAW;AAAA;AAAAoC,EAAA,GAPnBjC,MAAM;AAyCf,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}