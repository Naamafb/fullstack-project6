{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\react_api\\\\src\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  let jsonUser = localStorage.getItem(\"user\");\n  let user = JSON.parse(jsonUser);\n  let userid = user.id;\n  const [posts, setPosts] = useState([]);\n  const [findPosts, setFindPosts] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n  const [currentComments, setCurrentComments] = useState([]);\n  const [isDisplayComments, setIsDisplayComments] = useState(false);\n  const selectedPost = postId => {\n    setCurrentPost(postId);\n  };\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userid}`).then(response => response.json()).then(data => setPosts(data)).catch(() => setFindPosts(false));\n  }, []);\n  const displayComments = () => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/comments?postId=${currentPost}`).then(response => response.json()).then(data => setCurrentComments(\"There aren't no comments\")).catch(() => setFindPosts(\"false\"));\n    setIsDisplayComments(true);\n  };\n  if (findPosts) {\n    let postsHtml = posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectedPost(post.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          visibility: post.id === currentPost ? 'visible' : 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: displayComments,\n          children: \"comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            visibility: post.id === currentPost ? 'visible' : 'hidden'\n          },\n          children: currentComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"There are no posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Posts, \"ELnZ55ivcwlkPKIRnZcWJ7Uaheg=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Posts","_s","jsonUser","localStorage","getItem","user","JSON","parse","userid","id","posts","setPosts","findPosts","setFindPosts","currentPost","setCurrentPost","currentComments","setCurrentComments","isDisplayComments","setIsDisplayComments","selectedPost","postId","fetch","then","response","json","data","catch","displayComments","postsHtml","map","post","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","body","style","visibility","_c","$RefreshReg$"],"sources":["C:/full stack/react_api/src/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Posts() {\r\n  let jsonUser = localStorage.getItem(\"user\");\r\n  let user = JSON.parse(jsonUser);\r\n  let userid = user.id;\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [findPosts, setFindPosts] = useState(true);\r\n  const [currentPost,setCurrentPost]=useState();\r\n  const [currentComments,setCurrentComments]=useState([])\r\n  const [isDisplayComments,setIsDisplayComments]=useState(false)\r\n  \r\n   const selectedPost = (postId) => {setCurrentPost(postId)}\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data))\r\n      .catch(() => setFindPosts(false));\r\n  },[]);\r\n\r\n  const displayComments=()=>{\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/comments?postId=${currentPost}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrentComments(\"There aren't no comments\"))\r\n      .catch(() => setFindPosts(\"false\"));\r\n    setIsDisplayComments(true)\r\n};\r\n  \r\n\r\n  if (findPosts) {\r\n    let postsHtml = posts.map((post) =>(\r\n    <div key={post.id}>\r\n     <button key={post.id} onClick={() => selectedPost(post.id)}>\r\n     <h3>{post.title}</h3>\r\n     <p>{post.body}</p>\r\n     </button>\r\n\r\n\r\n     <div style={{ visibility: post.id === currentPost ? 'visible' : 'hidden' }}>\r\n     <button onClick={displayComments}> \r\n        comments\r\n     </button>\r\n     <div style={{ visibility: post.id === currentPost ? 'visible' : 'hidden' }}>\r\n        {currentComments}\r\n     </div>\r\n\r\n     </div>\r\n    </div>));\r\n    return (\r\n      <div>\r\n        {postsHtml}\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n  {return (<h2>There are no posts</h2>);}\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;EAC/B,IAAIM,MAAM,GAAGH,IAAI,CAACI,EAAE;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,WAAW,EAACC,cAAc,CAAC,GAACpB,QAAQ,CAAC,CAAC;EAC7C,MAAM,CAACqB,eAAe,EAACC,kBAAkB,CAAC,GAACtB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACuB,iBAAiB,EAACC,oBAAoB,CAAC,GAACxB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMyB,YAAY,GAAIC,MAAM,IAAK;IAACN,cAAc,CAACM,MAAM,CAAC;EAAA,CAAC;EAG1DzB,SAAS,CAAC,MAAM;IACd0B,KAAK,CAAE,qDAAoDd,MAAO,EAAC,CAAC,CACjEe,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKf,QAAQ,CAACe,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMe,eAAe,GAACA,CAAA,KAAI;IACxBN,KAAK,CAAE,8DAA6DR,WAAY,EAAC,CAAC,CAC/ES,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKT,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAC9DU,KAAK,CAAC,MAAMd,YAAY,CAAC,OAAO,CAAC,CAAC;IACrCM,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAGC,IAAIP,SAAS,EAAE;IACb,IAAIiB,SAAS,GAAGnB,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBAC/BhC,OAAA;MAAAiC,QAAA,gBACCjC,OAAA;QAAsBkC,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACW,IAAI,CAACtB,EAAE,CAAE;QAAAuB,QAAA,gBAC3DjC,OAAA;UAAAiC,QAAA,EAAKD,IAAI,CAACG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBvC,OAAA;UAAAiC,QAAA,EAAID,IAAI,CAACQ;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFLP,IAAI,CAACtB,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CAAC,eAGTvC,OAAA;QAAKyC,KAAK,EAAE;UAAEC,UAAU,EAAEV,IAAI,CAACtB,EAAE,KAAKK,WAAW,GAAG,SAAS,GAAG;QAAS,CAAE;QAAAkB,QAAA,gBAC3EjC,OAAA;UAAQkC,OAAO,EAAEL,eAAgB;UAAAI,QAAA,EAAC;QAElC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvC,OAAA;UAAKyC,KAAK,EAAE;YAAEC,UAAU,EAAEV,IAAI,CAACtB,EAAE,KAAKK,WAAW,GAAG,SAAS,GAAG;UAAS,CAAE;UAAAkB,QAAA,EACvEhB;QAAe;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA,GAfGP,IAAI,CAACtB,EAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBZ,CAAE,CAAC;IACR,oBACEvC,OAAA;MAAAiC,QAAA,EACGH;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV,CAAC,MAED;IAAC,oBAAQvC,OAAA;MAAAiC,QAAA,EAAI;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAE;AACxC;AAACrC,EAAA,CAzDQD,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AA2Dd,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}