{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\react_api\\\\src\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  let jsonUser = localStorage.getItem(\"user\");\n  let user = JSON.parse(jsonUser);\n  let userid = user.id;\n  const [todos, setTodos] = useState([]);\n  const [findTodos, setFindTodos] = useState(true);\n  const handleCheckboxChange = todoId => {\n    var todosFromLocal = JSON.parse(localStorage.getItem(\"todosList\").json());\n    if (todosFromLocal) {\n      setTodos(todosFromLocal);\n      setFindTodos(true);\n    } else {\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }\n  };\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/todos?userId=${userid}`).then(response => response.json()).then(data => setTodos(data)).catch(() => setFindTodos(false));\n  }, [userid]);\n  if (findTodos) {\n    localStorage.setItem(\"todosList\", JSON.stringify(findTodos));\n    let todosHtml = todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        checked: todo.completed,\n        onChange: () => handleCheckboxChange(todo.id),\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todosHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"There are no posts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"xxGWs+zz/S6/Bx/RxC9naVMqNzc=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Todos","_s","jsonUser","localStorage","getItem","user","JSON","parse","userid","id","todos","setTodos","findTodos","setFindTodos","handleCheckboxChange","todoId","todosFromLocal","json","updatedTodos","map","todo","completed","fetch","then","response","data","catch","setItem","stringify","todosHtml","children","checked","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/full stack/react_api/src/Todos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Todos() {\r\n  let jsonUser = localStorage.getItem(\"user\");\r\n  let user = JSON.parse(jsonUser);\r\n  let userid = user.id;\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [findTodos, setFindTodos] = useState(true);\r\n  \r\n  const handleCheckboxChange = (todoId) => {\r\n    var todosFromLocal=JSON.parse((localStorage.getItem(\"todosList\")).json())\r\n    if(todosFromLocal){\r\n      setTodos(todosFromLocal);\r\n      setFindTodos(true);\r\n    }\r\n    else{\r\n     const updatedTodos = todos.map((todo) => {\r\n      if (todo.id === todoId) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;});\r\n     setTodos(updatedTodos);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/todos?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setTodos(data))\r\n      .catch(() => setFindTodos(false))\r\n    }, [userid]);\r\n\r\n  if (findTodos) {\r\n    localStorage.setItem(\"todosList\", JSON.stringify(findTodos))\r\n    let todosHtml = todos.map((todo) => (\r\n        <div key={todo.id}>\r\n            <input checked={todo.completed} onChange={() => handleCheckboxChange(todo.id)} type=\"checkbox\"/>\r\n            <label>{todo.title}</label>\r\n        </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        {todosHtml}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no posts</h2>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}