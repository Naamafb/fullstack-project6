{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\react_api\\\\src\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  let jsonUser = localStorage.getItem(\"user\");\n  let user = JSON.parse(jsonUser);\n  let userid = user.id;\n  const [todos, setTodos] = useState([]);\n  const [findTodos, setFindTodos] = useState(true);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/todos?userId=${userid}`).then(response => response.json()).then(data => setTodos(data)).catch(() => setFindTodos(false));\n  }, [userid]);\n  if (findPosts) {\n    let postsHtml = todos.map(todo => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.title\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 41\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"There are no posts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"xxGWs+zz/S6/Bx/RxC9naVMqNzc=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Todos","_s","jsonUser","localStorage","getItem","user","JSON","parse","userid","id","todos","setTodos","findTodos","setFindTodos","fetch","then","response","json","data","catch","findPosts","postsHtml","map","todo","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/full stack/react_api/src/Todos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Todos() {\r\n  let jsonUser = localStorage.getItem(\"user\");\r\n  let user = JSON.parse(jsonUser);\r\n  let userid = user.id;\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [findTodos, setFindTodos] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/todos?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setTodos(data))\r\n      .catch(() => setFindTodos(false));\r\n  }, [userid]);\r\n\r\n  if (findPosts) {\r\n    let postsHtml = todos.map((todo) => <p key={todo.id}>{todo.title}</p>);\r\n    return (\r\n      <div>\r\n        {postsHtml}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no posts</h2>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;EAC/B,IAAIM,MAAM,GAAGH,IAAI,CAACI,EAAE;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAE,qDAAoDN,MAAO,EAAC,CAAC,CACjEO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAC,MAAMN,YAAY,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAIY,SAAS,EAAE;IACb,IAAIC,SAAS,GAAGX,KAAK,CAACY,GAAG,CAAEC,IAAI,iBAAKxB,OAAA;MAAAyB,QAAA,EAAkBD,IAAI,CAACE;IAAK,GAApBF,IAAI,CAACd,EAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,CAAC;IACtE,oBACE9B,OAAA;MAAAyB,QAAA,EACGH;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV;EAEA,oBACE9B,OAAA;IAAAyB,QAAA,EAAI;EAAkB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE/B;AAAC5B,EAAA,CA3BQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AA6Bd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}