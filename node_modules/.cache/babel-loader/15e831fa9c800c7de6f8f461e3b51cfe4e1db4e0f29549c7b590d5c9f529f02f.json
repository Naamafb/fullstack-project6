{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\react_api\\\\src\\\\Albums.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Albums() {\n  _s();\n  let jsonUser = localStorage.getItem(\"user\");\n  let user = JSON.parse(jsonUser);\n  let userid = user.id;\n  const [albums, setAlbums] = useState([]);\n  const [findAlbums, setFindAlbums] = useState(true);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userid}`).then(response => response.json()).then(data => setAlbums(data)).catch(() => setFindAlbums(false));\n  }, [userid]);\n  if (findAlbums) {\n    let albumsHtml = albums.map(album => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", album.title]\n    }, album.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 44\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: albumsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"There are no posts\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Albums, \"HWozuHofinT08lzMM2v0cetcvCI=\");\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Albums","_s","jsonUser","localStorage","getItem","user","JSON","parse","userid","id","albums","setAlbums","findAlbums","setFindAlbums","fetch","then","response","json","data","catch","albumsHtml","map","album","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/full stack/react_api/src/Albums.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Albums() {\r\n  let jsonUser = localStorage.getItem(\"user\");\r\n  let user = JSON.parse(jsonUser);\r\n  let userid = user.id;\r\n\r\n  const [albums, setAlbums] = useState([]);\r\n  const [findAlbums, setFindAlbums] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setAlbums(data))\r\n      .catch(() => setFindAlbums(false));\r\n  },[userid]);\r\n\r\n  if (findAlbums) {\r\n    let albumsHtml = albums.map((album) => <p key={album.id}> {album.title}</p>);\r\n    return (\r\n      <div>\r\n        {albumsHtml}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no posts</h2>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;EAC/B,IAAIM,MAAM,GAAGH,IAAI,CAACI,EAAE;EAEpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAE,sDAAqDN,MAAO,EAAC,CAAC,CAClEO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAC,MAAMN,aAAa,CAAC,KAAK,CAAC,CAAC;EACtC,CAAC,EAAC,CAACL,MAAM,CAAC,CAAC;EAEX,IAAII,UAAU,EAAE;IACd,IAAIQ,UAAU,GAAGV,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAAKvB,OAAA;MAAAwB,QAAA,GAAkB,GAAC,EAACD,KAAK,CAACE,KAAK;IAAA,GAAvBF,KAAK,CAACb,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC,CAAC;IAC5E,oBACE7B,OAAA;MAAAwB,QAAA,EACGH;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEV;EAEA,oBACE7B,OAAA;IAAAwB,QAAA,EAAI;EAAkB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE/B;AAAC3B,EAAA,CA3BQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}