[{"C:\\full stack\\react_api\\src\\index.js":"1","C:\\full stack\\react_api\\src\\reportWebVitals.js":"2","C:\\full stack\\react_api\\src\\App.js":"3","C:\\full stack\\react_api\\src\\Posts.js":"4","C:\\full stack\\react_api\\src\\Login.js":"5","C:\\full stack\\react_api\\src\\Albums.js":"6","C:\\full stack\\react_api\\src\\Photos.js":"7","C:\\full stack\\react_api\\src\\Todos.js":"8","C:\\full stack\\react_api\\src\\UserNav.js":"9","C:\\full stack\\react_api\\src\\Home.js":"10","C:\\full stack\\react_api\\src\\Info.js":"11","C:\\full stack\\fullstack-project6\\src\\index.js":"12","C:\\full stack\\fullstack-project6\\src\\App.js":"13","C:\\full stack\\fullstack-project6\\src\\reportWebVitals.js":"14","C:\\full stack\\fullstack-project6\\src\\Todos.js":"15","C:\\full stack\\fullstack-project6\\src\\Photos.js":"16","C:\\full stack\\fullstack-project6\\src\\Albums.js":"17","C:\\full stack\\fullstack-project6\\src\\Home.js":"18","C:\\full stack\\fullstack-project6\\src\\Posts.js":"19","C:\\full stack\\fullstack-project6\\src\\UserNav.js":"20","C:\\full stack\\fullstack-project6\\src\\Login.js":"21","C:\\full stack\\fullstack-project6\\src\\Info.js":"22"},{"size":552,"mtime":1683892246608,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1683892246609,"results":"25","hashOfConfig":"24"},{"size":1075,"mtime":1684763143793,"results":"26","hashOfConfig":"24"},{"size":2237,"mtime":1684821028168,"results":"27","hashOfConfig":"24"},{"size":2045,"mtime":1686049301081,"results":"28","hashOfConfig":"24"},{"size":1358,"mtime":1684822893817,"results":"29","hashOfConfig":"24"},{"size":2458,"mtime":1684825234396,"results":"30","hashOfConfig":"24"},{"size":2380,"mtime":1684823221035,"results":"31","hashOfConfig":"24"},{"size":1020,"mtime":1684825234410,"results":"32","hashOfConfig":"24"},{"size":140,"mtime":1684822317462,"results":"33","hashOfConfig":"24"},{"size":665,"mtime":1684825234383,"results":"34","hashOfConfig":"24"},{"size":552,"mtime":1683892246608,"results":"35","hashOfConfig":"36"},{"size":1075,"mtime":1684763143793,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1683892246609,"results":"38","hashOfConfig":"36"},{"size":2380,"mtime":1684823221035,"results":"39","hashOfConfig":"36"},{"size":2458,"mtime":1684825234396,"results":"40","hashOfConfig":"36"},{"size":1358,"mtime":1684822893817,"results":"41","hashOfConfig":"36"},{"size":140,"mtime":1684822317462,"results":"42","hashOfConfig":"36"},{"size":2237,"mtime":1684821028168,"results":"43","hashOfConfig":"36"},{"size":1020,"mtime":1684825234410,"results":"44","hashOfConfig":"36"},{"size":2443,"mtime":1686144543404,"results":"45","hashOfConfig":"36"},{"size":665,"mtime":1684825234383,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xtplv3",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d75w1q",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\full stack\\react_api\\src\\index.js",[],[],"C:\\full stack\\react_api\\src\\reportWebVitals.js",[],[],"C:\\full stack\\react_api\\src\\App.js",["118"],[],"C:\\full stack\\react_api\\src\\Posts.js",["119"],[],"C:\\full stack\\react_api\\src\\Login.js",["120"],[],"C:\\full stack\\react_api\\src\\Albums.js",["121"],[],"C:\\full stack\\react_api\\src\\Photos.js",["122","123","124"],[],"C:\\full stack\\react_api\\src\\Todos.js",["125"],[],"C:\\full stack\\react_api\\src\\UserNav.js",[],[],"C:\\full stack\\react_api\\src\\Home.js",[],[],"C:\\full stack\\react_api\\src\\Info.js",[],[],"C:\\full stack\\fullstack-project6\\src\\index.js",[],[],"C:\\full stack\\fullstack-project6\\src\\App.js",["126"],[],"import ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter, Routes, Route,Navigate} from \"react-router-dom\";\r\nimport Home from \"./Home.js\";\r\nimport Albums from \"./Albums.js\";\r\nimport Posts from \"./Posts.js\";\r\nimport Todos from \"./Todos.js\"\r\nimport Photos from \"./Photos.js\"\r\nimport Login from \"./Login.js\"\r\nimport UserNav from \"./UserNav.js\"\r\nimport Info from \"./Info.js\"\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n        <Route path=\"/login\" element={<Login/>} />\r\n        <Route path=\"/users/:userid\" element={<UserNav/>}> \r\n          <Route path=\"home\" element={<Home/>}/>\r\n          <Route path=\"albums\" element={<Albums />}/>\r\n          <Route path=\"todos\" element={<Todos/>}/>\r\n          <Route path=\"posts\" element={<Posts/>} />\r\n          <Route path=\"info\" element={<Info/>} />\r\n        </Route>      \r\n        \r\n        <Route path=\"users/:userid/albums/:albumId/photos\" element={<Photos/>}/>\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n   \r\n  );\r\n}\r\n\r\n","C:\\full stack\\fullstack-project6\\src\\reportWebVitals.js",[],[],"C:\\full stack\\fullstack-project6\\src\\Todos.js",["127"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Todo.css';\r\n\r\n\r\nfunction Todos() {\r\n  let {userid}=useParams();\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [findTodos, setFindTodos] = useState(true);\r\n  \r\n  const handleCheckboxChange = (todoId) => {\r\n    const updatedTodos = todos.map((todo) =>{\r\n      if (todo.id === todoId) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    localStorage.setItem(\"todosList\", JSON.stringify(updatedTodos));\r\n  };\r\n\r\n  const sortHandleChange= (e)=>{\r\n\r\n    const sort = e.target.value;\r\n    var updatedTodos=[...todos]\r\n    if(sort===\"completed\"){\r\n     updatedTodos = [...todos].sort((x, y)=> Number(x.completed) - Number(y.completed))\r\n    }\r\n    if(sort===\"abc\")\r\n    {\r\n      updatedTodos=[...todos].sort((x,y)=>x.title.localeCompare(y.title));\r\n    }\r\n    setTodos(updatedTodos);\r\n    localStorage.setItem(\"todosList\", JSON.stringify(updatedTodos));\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    var todosFromLocal=JSON.parse(localStorage.getItem(\"todosList\"))\r\n    if(Array.isArray(todosFromLocal)){\r\n      setTodos(todosFromLocal);\r\n      setFindTodos(true);\r\n    }\r\n    else{\r\n     fetch(`https://jsonplaceholder.typicode.com/todos?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTodos(data);\r\n        localStorage.setItem(\"todosList\", JSON.stringify(data));\r\n      })\r\n      .catch(() => setFindTodos(false))\r\n    }\r\n   },[]);\r\n   \r\n\r\n  if (findTodos) {\r\n    let todosHtml = todos.map((todo) => (\r\n        <div key={todo.id}>\r\n            <input checked={todo.completed} onChange={() => handleCheckboxChange(todo.id)} type=\"checkbox\"/>\r\n            <label>{todo.title}</label>\r\n        </div>\r\n    ));\r\n    return (\r\n      <div className=\"TodoContainer\">\r\n        <div>\r\n          <label htmlFor=\"sort\">Select a sort form:  </label>\r\n          <select id=\"cars\" className=\"SortSelect\" onChange={sortHandleChange}>\r\n            <option value=\"abc\">abc</option>\r\n            <option value=\"completed\">completed</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"TodoList\">\r\n          {todosHtml}\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no todos</h2>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","C:\\full stack\\fullstack-project6\\src\\Photos.js",["128","129","130"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {  useParams } from 'react-router-dom';\r\n\r\nfunction Photos() {\r\n  let {userid}=useParams();\r\n\r\n  let { albumId } = useParams();\r\n  const [photos, setPhotos] = useState([]);\r\n  const [findPhotos, setFindPhotos] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const photosContainerRef = useRef(null);\r\n\r\n  const handleScroll = () => {\r\n    const container = photosContainerRef.current;\r\n    const containerHeight = container.offsetHeight;\r\n    const scrollTop = container.scrollTop;\r\n    const scrollHeight = container.scrollHeight;\r\n\r\n    if (scrollHeight - scrollTop - containerHeight <= 10 && !isLoading && hasMore) {\r\n      setIsLoading(true);\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchPhotos();\r\n  },[userid,albumId,page]);\r\n\r\n  const fetchPhotos = () => {\r\n    fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${albumId}&_page=${page}&_limit=8`)\r\n      .then((response) => {\r\n        const totalCount = response.headers.get('x-total-count');\r\n        setHasMore(totalCount > page * 8);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPhotos((prevPhotos) => [...prevPhotos, ...data]);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => setFindPhotos(false));\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const container = photosContainerRef.current;\r\n    if (container) {\r\n      container.addEventListener('scroll', handleScroll);\r\n\r\n      return () => {\r\n        container.removeEventListener('scroll', handleScroll);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPhotos([]);\r\n    setPage(1);\r\n    setHasMore(true);\r\n    fetchPhotos();\r\n  }, [albumId]);\r\n\r\n  if (findPhotos) {\r\n    let photosHtml = photos.map((photo) => (\r\n      <div key={photo.id} style={{ margin: '10px' }}>\r\n        <img alt={photo.title} src={photo.thumbnailUrl} style={{ maxWidth: '100%', height: 'auto' }} />\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div ref={photosContainerRef} style={{ height: '100vh', overflowY: 'scroll' , marginTop: '0'}}>\r\n        <div style={{ minHeight: '100%' }}>\r\n          {photosHtml}\r\n        </div>\r\n        {isLoading && <div>Loading more photos...</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <h2>There are no photos</h2>;\r\n}\r\n\r\nexport default Photos;","C:\\full stack\\fullstack-project6\\src\\Albums.js",["131"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams,useNavigate } from \"react-router-dom\";\r\nimport \"./Albums.css\"\r\n\r\nfunction Albums() {\r\n  let {userid}=useParams();\r\n\r\n\r\n\r\n  const [albums, setAlbums] = useState([]);\r\n  const [findAlbums, setFindAlbums] = useState(true);\r\n  const navigate=useNavigate(); \r\n  // const [findPhotos, setFindPhotos] = useState(true);\r\n\r\n  // const [currentAlbum,setCurrentAlbum]=useState();\r\n//   const [currentPhotos,setCurrentPhotos]=useState();\r\n//   const [selectedComments,setSelectedComments]=useState(false);\r\n\r\n  // const selectedAlbum = (albumId) => {\r\n  //   // setCurrentAlbum(albumId);\r\n  //   navigate(`/user/albums/${albumId}/photos`);\r\n  // }\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setAlbums(data))\r\n      .catch(() => setFindAlbums(false));\r\n  },[userid]);\r\n\r\n  if (findAlbums) {\r\n    let albumsHtml = albums.map((album) => (<div><Link key={album.id} to={`/users/${userid}/albums/${album.id}/photos`}> {album.title}</Link><br></br></div>));\r\n    return (\r\n      <div className=\"albumsDiv\">\r\n        {albumsHtml}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h2>There are no posts</h2>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n","C:\\full stack\\fullstack-project6\\src\\Home.js",[],[],"C:\\full stack\\fullstack-project6\\src\\Posts.js",["132"],[],"import React, { useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport \"./Posts.css\"\r\n\r\nfunction Posts() {\r\n  let {userid}=useParams();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [findPosts, setFindPosts] = useState(true);\r\n  const [currentPost,setCurrentPost]=useState();\r\n  const [currentComments,setCurrentComments]=useState()\r\n  const [selectedComments,setSelectedComments]=useState(false)\r\n  \r\n   const selectedPost = (postId) => {\r\n    setCurrentPost(postId)\r\n    setSelectedComments(null)\r\n\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userid}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data))\r\n      .catch(() => setFindPosts(false));\r\n  },[]);\r\n\r\n  const displayComments=()=>{\r\n    debugger\r\n    if(selectedComments){\r\n        setSelectedComments(null)\r\n    }\r\n    else{\r\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currentPost}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrentComments(\r\n        (data.map((comment)=>\r\n        (<div key={comment.id}>\r\n            <h3>{comment.name}</h3>\r\n            <p>{comment.body}</p>\r\n        </div>))\r\n        )))\r\n      .catch(() => setCurrentComments(\"there aren't comments\"));\r\n      setSelectedComments(currentPost)\r\n    }\r\n};\r\n  \r\n\r\n  if (findPosts) {\r\n    let postsHtml = posts.map((post) =>(\r\n    <div key={post.id}>\r\n     <button className={ post.id === currentPost?'selectedPost':'post'} key={post.id} onClick={() => selectedPost(post.id)}>\r\n     <h3>{post.title}</h3>\r\n     <p>{post.body}</p>\r\n     </button>\r\n\r\n\r\n     <div  style={{ visibility: post.id === currentPost ? 'visible' : 'collapse',display:post.id === currentPost ? 'flex' : 'none' }}>\r\n      <button onClick={displayComments}> \r\n        comments\r\n      </button> \r\n      <div style={{ visibility: post.id === selectedComments ? 'visible' : 'collapse' ,display:post.id === selectedComments ? 'flex' : 'none'}}>\r\n        {currentComments}\r\n      </div>\r\n     </div>\r\n    </div>));\r\n    return (\r\n      <div>\r\n        {postsHtml}\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n  {return (<h2>There are no posts</h2>);}\r\n}\r\n\r\nexport default Posts;\r\n","C:\\full stack\\fullstack-project6\\src\\UserNav.js",[],[],"C:\\full stack\\fullstack-project6\\src\\Login.js",["133","134"],[],"C:\\full stack\\fullstack-project6\\src\\Info.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":26,"column":5,"nodeType":"141","endLine":26,"endColumn":7,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":34,"column":18,"nodeType":"145","messageId":"146","endLine":34,"endColumn":20},{"ruleId":"135","severity":1,"message":"147","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":17},{"ruleId":"139","severity":1,"message":"148","line":28,"column":5,"nodeType":"141","endLine":28,"endColumn":26,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":55,"column":6,"nodeType":"141","endLine":55,"endColumn":8,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"148","line":62,"column":6,"nodeType":"141","endLine":62,"endColumn":15,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"140","line":54,"column":6,"nodeType":"141","endLine":54,"endColumn":8,"suggestions":"153"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":54,"column":6,"nodeType":"141","endLine":54,"endColumn":8,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"148","line":28,"column":5,"nodeType":"141","endLine":28,"endColumn":26,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"150","line":55,"column":6,"nodeType":"141","endLine":55,"endColumn":8,"suggestions":"156"},{"ruleId":"139","severity":1,"message":"148","line":62,"column":6,"nodeType":"141","endLine":62,"endColumn":15,"suggestions":"157"},{"ruleId":"135","severity":1,"message":"147","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":26,"column":5,"nodeType":"141","endLine":26,"endColumn":7,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":46,"column":13,"nodeType":"161","messageId":"162","endLine":46,"endColumn":67},{"ruleId":"143","severity":1,"message":"144","line":52,"column":18,"nodeType":"145","messageId":"146","endLine":52,"endColumn":20},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.","ArrayExpression",["163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPhotos'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["165"],["166"],["167"],["168"],["169"],["170"],["171"],["172"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"173","fix":"181"},{"desc":"173","fix":"182"},{"desc":"175","fix":"183"},{"desc":"177","fix":"184"},{"desc":"179","fix":"185"},{"desc":"173","fix":"186"},"Update the dependencies array to be: [userid]",{"range":"187","text":"188"},"Update the dependencies array to be: [userid, albumId, page, fetchPhotos]",{"range":"189","text":"190"},"Update the dependencies array to be: [handleScroll]",{"range":"191","text":"192"},"Update the dependencies array to be: [albumId, fetchPhotos]",{"range":"193","text":"194"},{"range":"195","text":"188"},{"range":"196","text":"188"},{"range":"197","text":"190"},{"range":"198","text":"192"},{"range":"199","text":"194"},{"range":"200","text":"188"},[775,777],"[userid]",[933,954],"[userid, albumId, page, fetchPhotos]",[1721,1723],"[handleScroll]",[1835,1844],"[albumId, fetchPhotos]",[1561,1563],[1561,1563],[933,954],[1721,1723],[1835,1844],[775,777]]